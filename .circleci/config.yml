version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/gls # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:13.11.0

    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory

      - restore_cache: # special step to restore the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}-yarn2
      - run:
          name: yarn-install
          command: yarn

      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}-yarn2
          paths:
            - ./node_modules

      - run: # run tests
          name: test
          command: yarn test | tee /tmp/test-results.log

      - run: # run ganache mainnet fork
          name: ganache-fork-mainnet-background
          command: yarn ganache-fork-mainnet-background

      # https://discuss.circleci.com/t/run-http-server-in-background-during-tests/3177
      # wait for the server to start responding. We expect Bad Request 400 once it starts listening.
      # so override the shell and have the last command be the : { null } command to force exit code 0.
      - run:
          name: await-ganache-fork
          shell: /bin/sh
          command: |
            wget --post-data="{\"method\": \"eth_blockNumber\"}" --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 10 http://localhost:8544/
            :
      - run: # run tests with fork
          name: test-fork
          command: yarn lerna-run-test-fork | tee /tmp/test-results.log

#coverage is broken (doesn't cover all contracts). disabled for now..
#      - restore_cache: # special cache for coverage test
#          key: last-coverage
#          paths:
#            - ./coverage

#      - run: # run coverage. update "coverage/covsig.txt" if successful run.
#          # use last coverage report if no test/contract was changed.
#          name: coverage
#          command: yarn run coverage-if-changed

#      - save_cache: # special cache for coverage test
#          key: last-coverage
#          paths:
#            - ./coverage

#      - store_artifacts: # special step to save test results as as artifact
#          path: ./coverage
#      - store_artifacts:
#          path: ./coverage.html

      - store_test_results: # special step to upload test results for display in Test Summary
          path: /tmp/test-results.log

#too much noise..
#notify:
#  webhooks:
#    - url: https://twist.com/integrations/circleci/from_circleci?install_id=85424&post_data_url=https%3A%2F%2Ftwist.com%2Fapi%2Fv3%2Fintegration_incoming%2Fpost_data%3Finstall_id%3D85424%26install_token%3D85424_0aad1ece9d2470896c9142aae3440b5b
